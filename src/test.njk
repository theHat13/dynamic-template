---
title: Test
description: This is the test page
layout: '00-core/base.njk'
---

{# Import required atom macros #}
{% from "03-atoms/link.njk" import linkComponent %}
{% from "03-atoms/chip-notification.njk" import renderChipNotification %}
{% from "03-atoms/tag.njk" import renderTag %}
{% from "03-atoms/tooltip.njk" import renderTooltip %}
{% from "03-atoms/select.njk" import renderSelect %}
{% from "03-atoms/input.njk" import renderInput %}
{% from "03-atoms/chip-multiselect.njk" import renderChipMultiselect %}
{% from "03-atoms/checkbox.njk" import renderCheckbox %}
{% from "03-atoms/box.njk" import boxComponent %}
{% from "03-atoms/radio-button.njk" import renderRadioButton %}
{% from "03-atoms/radio.njk" import renderRadio %}
{% from "03-atoms/toggle.njk" import renderToggle %}
{% from "03-atoms/switch.njk" import renderSwitch %}
{% from "03-atoms/image.njk" import renderImage %}
{% from "03-atoms/vector.njk" import renderVector %}
{% from "03-atoms/icon.njk" import renderIcon %}
{% from "03-atoms/button.njk" import renderButton %}
{% from "03-atoms/heading.njk" import renderHeading %}

{# Import required molecules macros #}
{% from "02-molecules/breadcrumb.njk" import renderBreadcrumb %}
{% from "02-molecules/pagination.njk" import renderPagination %}
{% from "02-molecules/caption.njk" import renderCaption %}
{% from "02-molecules/toast.njk" import renderToast %}
{% from "02-molecules/disclaimer.njk" import renderDisclaimer %}
{% from "02-molecules/dropzone-upload.njk" import renderDropzoneUpload %}
{% from "02-molecules/rating-gauge.njk" import renderRatingGauge %}
{% from "02-molecules/progress-bar.njk" import renderProgressBar %}
{% from "02-molecules/list-form.njk" import renderListForm %}
{% from "02-molecules/segmented-control.njk" import renderSegmentedControl %}
{% from "02-molecules/lockup.njk" import renderLockup %}
{% from "02-molecules/list-value.njk" import renderListValue %}
{% from "02-molecules/list-content.njk" import renderListContent %}
{% from "02-molecules/card.njk" import renderCard %}

{# Import required molecules macros #}
{% from "01-organisms/menu.njk" import renderMenu %}
{% from "01-organisms/navigation.njk" import renderNavigation %}
{% from "01-organisms/navigation-secondary.njk" import renderNavigationSecondary %}
{% from "01-organisms/section-hero.njk" import renderSectionHero %}
{% from "01-organisms/section-value.njk" import renderSectionValue %}
{% from "01-organisms/section-about.njk" import renderSectionAbout %}
{% from "01-organisms/section-listing.njk" import renderSectionListing %}
{% from "01-organisms/section-article-hero.njk" import renderSectionArticleHero %}
{% from "01-organisms/section-contact.njk" import renderSectionContact %}

{# Component Display Section #}
<div class="w-3/4 mx-auto bg-white rounded-md p-6 flex flex-col items-center">

    {# Section Title #}
    <h2 class="text-2xl font-semibold mb-6">HAT Component Playground</h2>

    {# Link Atom #}
    <h3 class="text-xl font-semibold mb-4">Link</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing link component #}
            {{ linkComponent({ name: "camp", datas: atoms.links }) }}
        </div>
    </div>

    {# Chip Notification Atom #}
    <h3 class="text-xl font-semibold mt-8 mb-4">Chip Notification</h3>
    <div class="p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
        {{ renderChipNotification({ name: "notification_count", datas: atoms["chip-notifications"] }) }}
    </div>

    {# Tag Atom #}
    <h3 class="text-xl font-semibold mb-4">Tag</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing tag component #}
            {{ renderTag({ name: "adventure", datas: atoms.tags }) }}
        </div>
    </div>

    {# Tooltip Atom #}
    <h3 class="text-xl font-semibold mb-4">Tooltip</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing tooltip component #}
            {{ renderTooltip({ name: "mystic_amulet", datas: atoms.tooltips }) }}
        </div>
    </div>

    {# Select Atom #}
    <h3 class="text-xl font-semibold mb-4">Select</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing select component #}
            {{ renderSelect({ name: "categories", datas: atoms.selects }) }}
        </div>
    </div>

    {# Input Atom #}
    <h3 class="text-xl font-semibold mb-4">Input</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing input component #}
            {{ renderInput({ name: "hero_name", datas: atoms.inputs }) }}
        </div>
    </div>

    {# Chip Multiselect Atom #}
    <h3 class="text-xl font-semibold mt-8 mb-4">Chip Multiselect</h3>
    <div class="p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
        {# Render existing chip multiselect component #}
        {{ renderChipMultiselect({ name: "fire", datas: atoms["chip-multiselects"] }) }}
    </div>

    {# Checkbox Atom #}
    <h3 class="text-xl font-semibold mb-4">Checkbox</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing checkbox component #}
            {{ renderCheckbox({ 
            group: true, 
            groupName: "rpgStyles",
            datas: atoms.checkboxes,
            boxStyles: atoms.boxes 
            }) }}
        </div>
    </div>

    {# Box Atom #}
    <h3 class="text-xl font-semibold mb-4">Box</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing box component #}
            {{ boxComponent({ id: "box1", datas: atoms.boxes }) }}
        </div>
    </div>

    {# Radio Button Atom #}
    <h3 class="text-xl font-semibold mb-4">Radio button</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing radio-button component #}
            {{ renderRadioButton({ 
                group: true, 
                groupLabel: "Your RPG Combat Style",
                groupSrOnly: false,
                datas: atoms["radio-buttons"] 
            }) }}
        </div>
    </div>

    {# Radio Atom #}
    <h3 class="text-xl font-semibold mb-4">Radio</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing radio component #}
            {{ renderRadio({ id: "radio1", datas: atoms.radios }) }}
        </div>
    </div>

    {# Toggle Atom #}
    <h3 class="text-xl font-semibold mb-4">Toggle</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing toggle component #}
            {{ renderToggle({ id: "combat_difficulty", datas: atoms.toggles }) }}
        </div>
    </div>

    {# Switch Atom #}
    <h3 class="text-xl font-semibold mb-4">Switch</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing switch component #}
            {{ renderSwitch({ id: "torch", datas: atoms.switchs }) }}
        </div>
    </div>

    {# Image Atom #}
    <h3 class="text-xl font-semibold mb-4">Image</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing image component #}
            {{ renderImage({ name: "avatar_character", datas: atoms.images }) }}
        </div>
    </div>

    {# Vector Atom #}
    <h3 class="text-xl font-semibold mb-4">Vector</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing vector component #}
            {{ renderVector({ name: "logo_full", datas: atoms.vectors }) }}
        </div>
    </div>

    {# Icon Atom #}
    <h3 class="text-xl font-semibold mb-4">Icon</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing icon component #}
            {{ renderIcon({ name: "brand", size: "lg", datas: atoms.icons }) }}
        </div>
    </div>

    {# Button Atom #}
    <h3 class="text-xl font-semibold mb-4">Button</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing button component #}
            {{ renderButton({ 
                name: "submit_quest",
                datas: atoms.buttons,
                icons: atoms.icons
            }) }}
        </div>
    </div>

    {# Heading Atom #}
    <h3 class="text-xl font-semibold mb-4">Heading</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing heading component #}
            {{ renderHeading({ name: "section_title", datas: atoms.headings }) }}
        </div>
    </div>

    {# Breadcrumb Molecule #}
    <h3 class="text-xl font-semibold mb-4">Breadcrumb</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing breadcrumb component #}
            {{ renderBreadcrumb({ name: "adventure", datas: molecules.breadcrumbs, links: atoms.links }) }}
        </div>
    </div>

    {# Pagination Molecule #}
    <h3 class="text-xl font-semibold mb-4">Pagination</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render pagination component #}
            {{ renderPagination({ 
                name: "pager", 
                currentPage: 1,
                totalPages: 10,
                itemsPerPage: 10,
                totalItems: 98,
                buttonData: atoms.buttons,
                selectData: atoms.selects,
                datas: molecules.paginations, 
                icons: atoms.icons
            }) }}
        </div>
    </div>

    {# Caption Molecule #}
    <h3 class="text-xl font-semibold mb-4">Caption</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing caption component #}
            {{ renderCaption({ name: "error_label", datas: molecules.captions, icons: atoms.icons }) }}
        </div>
    </div>

    {# Toast Molecule #}
    <h3 class="text-xl font-semibold mb-4">Toast</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing toast component #}
            {{ renderToast({ 
                name: "warning_notification", 
                datas: molecules.toasts, 
                icons: atoms.icons 
            }) }}
        </div>
    </div>

    {# Disclaimer Molecule #}
    <h3 class="text-xl font-semibold mb-4">Disclaimer</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing disclaimer component #}
            {{ renderDisclaimer({ 
                name: "quest_completed", 
                datas: molecules.disclaimers,
                icons: atoms.icons 
            }) }}
        </div>
    </div>

    {# Dropzone-upload Molecule #}
    <h3 class="text-xl font-semibold mb-4">Dropzone upload</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing dropzone-upload component #}
            {{ renderDropzoneUpload({ 
                name: "standard_upload", 
                datas: molecules["dropzone-uploads"],
                headings: atoms.headings,
                icons: atoms.icons,
                buttons: atoms.buttons
            }) }}
        </div>
    </div>

    {# Rating gauge Molecule #}
    <h3 class="text-xl font-semibold mb-4">Rating gauge</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing rating gauge component #}
            {{ renderRatingGauge({ 
                name: "three_star",
                datas: molecules["rating-gauges"],
                icons: atoms.icons
            }) }}
        </div>
    </div>

    {# Progress bar Molecule #}
    <h3 class="text-xl font-semibold mb-4">Progress bar</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing progress-bar component #}
            {{ renderProgressBar({ 
                name: "default-progress",
                datas: molecules["progress-bars"],
                headings: atoms.headings
            }) }}
        </div>
    </div>

    {# List form Molecule #}
    <h3 class="text-xl font-semibold mb-4">List form</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing list-form component #}
            {{ renderListForm({ 
                name: "hero_registration",
                datas: molecules["list-forms"],
                atoms: atoms
            }) }}
        </div>
    </div>

    {# Segmented-control Molecule #}
    <h3 class="text-xl font-semibold mb-4">Segmented-control</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing segmented-control component #}
            {{ renderSegmentedControl({ 
                    name: "filter_controls",
                    datas: molecules["segmented-controls"],
                    buttons: atoms.buttons 
                }) }}
        </div>
    </div>

    {# Lockup Molecule #}
    <h3 class="text-xl font-semibold mb-4">Lockup</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing lockup component #}
            {{ renderLockup({ 
                name: "team_member",
                datas: molecules.lockups,
                images: atoms.images,
                headings: atoms.headings
            }) }}
        </div>
    </div>

    {# List value Molecule #}
    <h3 class="text-xl font-semibold mb-4">List value</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing list-value component #}
            {{ renderListValue({ 
                name: "columns",
                datas: molecules["list-values"],
                lockups: molecules.lockups,
                variant: "default"
            }) }}
        </div>
    </div>

    {# List content Molecule #}
    <h3 class="text-xl font-semibold mb-4">List content</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing list-content component #}
            {{ renderListContent({ 
                name: "forgotten_legends",
                datas: molecules["list-contents"],
                lockups: molecules.lockups,
                images: atoms.images,
                headings: atoms.headings
            }) }}
        </div>
    </div>

    {# Card Molecule #}
    <h3 class="text-xl font-semibold mb-4">Card content</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing card component #}
            {{ renderCard({ 
                name: "goblin_menace",
                variant: "default",
                datas: molecules.cards,
                images: atoms.images,
                headings: atoms.headings,
                buttons: atoms.buttons
            }) }}
        </div>
    </div>

    {# Navigation Organism #}
    <h3 class="text-xl font-semibold mb-4">Navigation</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing navigation component #}
            {{ renderNavigation({ 
                name: "main",
                datas: organisms.navigations,
                links: atoms.links
            }) }}
    </div>

    {# Navigation secondary Organism #}
    <h3 class="text-xl font-semibold mb-4">Navigation secondary</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing navigation-secondary component #}
            {{ renderNavigationSecondary({ 
                name: "main",
                datas: organisms["navigation-secondarys"],
                links: atoms.links
            }) }}
    </div>

    {# Menu Organism #}
    <h3 class="text-xl font-semibold mb-4">Menu</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing menu component #}
            {{ renderMenu({ 
                name: "main_navigation",
                datas: organisms.menus,
                "navigation-secondarys": organisms["navigation-secondarys"],
                links: atoms.links,
                headings: atoms.headings
            }) }}
    </div>

    {# Section Hero Organism #}
    <h3 class="text-xl font-semibold mb-4">Section Hero</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing section-hero component #}
            {{ renderSectionHero({ 
                name: "default_hero",
                datas: organisms["section-heros"],
                headings: atoms.headings,
                buttons: atoms.buttons,
                images: atoms.images
            }) }}
    </div>

    {# Section Value Organism #}
    <h3 class="text-xl font-semibold mb-4">Section Value</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing section-value component #}
            {{ renderSectionValue({ 
                name: "core_values",
                datas: organisms["section-values"],
                headings: atoms.headings,
                buttons: atoms.buttons,
                cards: molecules.cards
            }) }}
    </div>

    {# Section About Organism #}
    <h3 class="text-xl font-semibold mb-4">Section About</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing section-about component #}
            {{ renderSectionAbout({ 
                name: "about_us", 
                datas: organisms["section-abouts"], 
                headings: atoms.headings, 
                buttons: atoms.buttons 
            }) }}
    </div>

    {# Section Listing Organism #}
    <h3 class="text-xl font-semibold mb-4">Section Listing</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing section-listing component #}
            {{ renderSectionListing({ 
                name: "adventure_quests",
                datas: organisms["section-listings"],
                headings: atoms.headings,
                cards: molecules.cards,
                paginations: molecules.paginations,
                buttons: atoms.buttons,
                icons: atoms.icons,
                selects: atoms.selects,
                images: atoms.images
            }) }}
    </div>

    {# Section Article Hero Organism #}
    <h3 class="text-xl font-semibold mb-4">Section Article Hero</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing section-article-hero component #}
            {{ renderSectionArticleHero({ 
                name: "article_hero_secondary", 
                datas: organisms["section-article-heros"],
                headings: atoms.headings,
                images: atoms.images
            }) }}
    </div>

    {# Section Contact Organism #}
    <h3 class="text-xl font-semibold mb-4">Section Contact</h3>
    <div class="space-y-4">
        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-md hover:bg-gray-100 transition-colors">
            {# Render existing section-contact component #}
            {{ renderSectionContact({ 
                name: "default",
                datas: organisms["section-contacts"],
                headings: atoms.headings,
                listForms: molecules["list-forms"],
                buttons: atoms.buttons,
                atoms: atoms
            }) }}
    </div>

    {# Portal to the Sacred Codex #}
    <div class="mt-8 pt-6 border-t text-center">
        <a href="http://localhost:6006" target="_blank" class="bg-blue-600 text-white px-5 py-2 rounded-lg hover:bg-blue-700 transition-colors inline-block">
            ⚔️ Enter the Storybook Area
        </a>
        <p class="mt-2 text-gray-600 text-sm italic">
            (Only for the bravest ones)
        </p>
    </div>

    {# Development Status Indicator #}
    <div class="mt-12 text-center">
        <div class="mt-4 text-lg font-semibold text-gray-800">
            🛡️
            <span class="text-red-600">**Legendary Quest Status: Work in Progress**</span>
        </div>
        <p class="text-gray-600 mt-2 italic">
            "The realm of HAT is still being forged… More artifacts to come!"
        </p>
        <ul class="mt-4 text-gray-500 text-sm">
            <li>⚒️ Arcane Radio Button - Under Enchantment</li>
            <li>⚒️ Mystic Checkbox - Seeking the Rune of Validation</li>
            <li>⚒️ Elixir Selection Dropdown - Brewing in the Alchemy Lab</li>
            <li>⚒️ The Ancient Time Relic - Date Picker in the Works</li>
        </ul>
    </div>
</div>