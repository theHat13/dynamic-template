<!-- ========================= -->
<!--           SELECT          -->
<!-- ========================= -->

{% macro renderSelect(option) %}
  {# Get select options with default values if not provided #}
  {% set name = option.name | default('select-default') %}
  {% set options = option.options | default([]) %}
  {% set variant = option.variant | default(select.defaultProps.variant) %}
  
  {# Find the variant in the select.json file #}
  {% set selectedVariant = null %}
  {% for v in select.variants %}
    {% if v.name == variant %}
      {% set selectedVariant = v %}
    {% endif %}
  {% endfor %}
  
  {# Use default variant if specified variant was not found #}
  {% if not selectedVariant %}
    {% for v in select.variants %}
      {% if v.name == select.defaultProps.variant %}
        {% set selectedVariant = v %}
      {% endif %}
    {% endfor %}
  {% endif %}
  
  {# Render the select with appropriate classes from select.json #}
  <div class="mt-6 mb-6 mx-auto">
    <select name="{{ name }}" class="{{ selectedVariant.class }}">
      {% for opt in options %}
        <option value="{{ opt.value }}"{% if opt.selected %} selected{% endif %}>{{ opt.label }}</option>
      {% endfor %}
    </select>
  </div>
{% endmacro %}

<!-- ========================= -->
<!-- HOW TO USE THIS COMPONENT -->
<!-- ========================= -->

<!--
  Complete documentation in Storybook
  Basic usage: {% from "02-atoms/select.njk" import renderSelect %}
              {{ renderSelect(selects.select_data.categories) }}
  Custom usage: {{ renderSelect({
                  name: "custom-select",
                  options: [
                    { value: "option1", label: "Option 1" },
                    { value: "option2", label: "Option 2", selected: true }
                  ],
                  variant: "primary"
                }) }}
-->