<!-- ========================= -->
<!--    CHIP MULTI SELECT    -->
<!-- ========================= -->

{% macro renderChipMultiSelect(options) %}
  {# Extract needed properties with defaults #}
  {% set name = options.name | default('chip-select') %}
  {% set title = options.title | default('Select options') %}
  {% set variant = options.variant | default('default') %}
  {% set chipOptions = options.options | default([]) %}
  {% set disabled = options.disabled | default(false) %}
  
  {# Get variant styles from the chip_multi_select.json file #}
  {% set variantStyles = chip_multi_select.variants[variant] %}
  
  {# If variant doesn't exist, use default #}
  {% if not variantStyles %}
    {% set variantStyles = chip_multi_select.variants.default %}
  {% endif %}

  <div class="chip-multi-select">
    <span class="inline-flex items-center font-medium text-purple-500 text-xs mb-2">
      <span class="w-3 h-3 inline-block mr-1 bg-purple-500 rounded-full"></span>
      .chip-multiselect
    </span>
    
    {# Title for the chip group #}
    {% if title %}
      <label class="block text-sm font-medium text-gray-700 mb-2">{{ title }}</label>
    {% endif %}
    
    {# Container for all chips #}
    <div class="{{ variantStyles.container }}" role="group" aria-label="{{ title }}">
      {% for option in chipOptions %}
        <div 
          class="{{ variantStyles.chip.base }} {{ variantStyles.chip.default }}"
          data-state="default"
          data-hover-class="{{ variantStyles.chip.hover }}"
          data-focus-class="{{ variantStyles.chip.focus }}"
          data-disabled-class="{{ variantStyles.chip.disabled }}"
          data-option-value="{{ option.value }}"
          role="button"
          tabindex="{% if disabled or option.disabled %}-1{% else %}0{% endif %}"
          {% if disabled or option.disabled %}aria-disabled="true"{% endif %}
        >
          <span class="chip-label">{{ option.label }}</span>
          <button type="button" 
            class="chip-remove {{ variantStyles.chip.removeIcon }}"
            aria-label="Remove {{ option.label }}"
            {% if disabled or option.disabled %}disabled{% endif %}
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3.5 h-3.5">
              <path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z" />
            </svg>
          </button>
        </div>
      {% endfor %}
    </div>
  </div>
{% endmacro %}

<!-- ========================= -->
<!-- HOW TO USE THIS COMPONENT -->
<!-- ========================= -->

<!--
  Complete documentation in Storybook
  Basic usage: {% from "03-atoms/chip-multi-select.njk" import renderChipMultiSelect %}
               {{ renderChipMultiSelect(chip_multi_selects.chip_multi_select_data.geek_languages) }}
  
  Features:
  - Multiple selection with clickable remove button
  - Four visual states: default, hover, focus, and disabled
  - Fully accessible with keyboard support
  
  Note: This component requires the JS file: /js/atoms/chip-multi-select.js
-->